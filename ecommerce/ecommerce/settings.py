"""
Django settings for ecommerce project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import stripe
import os
from dotenv import load_dotenv

# Charge les variables d'environnement
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-3kv&0widx56)x5%vuubx0m*77p_(gw52&)@2bu5_7%y35p_el^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'corsheaders',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Ajout de Django REST Framework
    'rest_framework',
    # Notre application panier et paiement
    'cart',
    # les encheres 
    "Auction_English",
    "Auction_Sealed",
    "Auction_Combinatoire",
    
    'django_q',
    'inventory'
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'cart.middleware.SessionPersistenceMiddleware', 
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ecommerce.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'ecommerce.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



# Stripe
STRIPE_PUBLIC_KEY = os.getenv('STRIPE_PUBLIC_KEY')
STRIPE_SECRET_KEY = os.getenv('STRIPE_SECRET_KEY')
stripe.api_key = STRIPE_SECRET_KEY

# Email
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.getenv('EMAIL_HOST')
EMAIL_PORT = int(os.getenv('EMAIL_PORT', 587))
EMAIL_USE_TLS = os.getenv('EMAIL_USE_TLS') == 'True'  # Conversion en boolÃ©en
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ],
    
    'DEFAULT_PERMISSION_CLASSES': [
        # 'rest_framework.permissions.IsAuthenticated',
        'rest_framework.permissions.AllowAny',
    ]
}

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # Autorise Next.js
]

SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # ðŸ”¹ Sessions stockÃ©es en base de donnÃ©es


#CORS_ALLOW_ALL_ORIGINS = True  # Autoriser tous les domaines
CORS_ALLOW_CREDENTIALS = True  # Autoriser les cookies et tokens

# SESSION_COOKIE_NAME = 'sessionid'  # Nom du cookie de session
# SESSION_COOKIE_AGE = 3600 * 24 * 7   # DurÃ©e de session : 1 jour
# #SESSION_SAVE_EVERY_REQUEST = True  # Sauvegarde la session Ã  chaque requÃªte
# SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # Ne pas supprimer Ã  la fermeture du navigateur
# SESSION_COOKIE_HTTPONLY = True  # ðŸ”¹ EmpÃªche l'accÃ¨s JS aux cookies (sÃ©curitÃ©)
# SESSION_COOKIE_SECURE = False  # ðŸ”¹ Mets `True` si HTTPS activÃ©
# #SESSION_COOKIE_SAMESITE = "None"  # ðŸ”¹ Autorise les requÃªtes cross-origin
# SESSION_COOKIE_SAMESITE = 'Lax'
# CORS_ORIGIN_ALLOW_ALL = True  # Ou spÃ©cifiez les origines autorisÃ©es
# CORS_ALLOW_METHODS = ['GET', 'POST', 'PUT', 'DELETE', 'HEAD']
# SESSION_SAVE_EVERY_REQUEST = True  # Ne pas recrÃ©er la session Ã  chaque requÃªte
# SESSION_COOKIE_DOMAIN = '127.0.0.1'




# Django-Q configuration
Q_CLUSTER = {
    'name': 'AuctionNotifier',
    'workers': 4,
    'timeout': 60,
    'retry': 120,
    'queue_limit': 50,
    'bulk': 10,
    'orm': 'default',  # Uses Django's database as broker
}

CSRF_TRUSTED_ORIGINS = [
    "http://localhost:3000", 
]
